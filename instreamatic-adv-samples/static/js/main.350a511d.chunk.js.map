{"version":3,"sources":["components/question/track-text/track-text.module.css","components/ui/button/button.module.css","components/companies-list/company/company.module.css","components/companies-list/companiesList.module.css","components/question/track/track.module.css","components/question/answers-list/answers-list.module.css","components/question/question.module.css","components/company-logo/company-logo.module.css","components/ui/spinner/spinner.module.css","components/app/app.module.css","components/companies-list/company/index.js","components/companies-list/company/company.js","components/companies-list/index.js","components/companies-list/companies-list.js","components/question/track-text/track-text.js","components/question/track/index.js","components/question/track/track.js","components/ui/button/index.js","components/ui/button/button.js","components/question/answers-list/index.js","components/question/answers-list/answers-list.js","utils.js","components/question/index.js","components/question/question.js","components/company-logo/index.js","components/company-logo/company-logo.js","components/ui/spinner/index.js","components/ui/spinner/spinner.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Company","company","onCompanySelected","className","classes","onClick","id","Image","src","image","alt","title","Title","CompaniesList","companies","list","Object","keys","map","key","Header","Component","Track","state","audioCanPlay","autoPlay","player","createRef","onAudioCanPlay","setState","onStartPlaying","prevProps","this","props","track","current","audio","play","onTrackEnded","vizualizer","Vizualizer","height","width","audioEle","capColor","capHeight","meterWidth","meterCount","meterColor","stop","color","gap","customAdditionalControls","showJumpControls","onEnded","ref","onCanPlay","onPlay","crossOrigin","Button","text","clicked","btnClass","disabled","type","Back","Normal","Disabled","AnswersList","answers","onAnswerSelected","onBackClicked","selectedAnswer","btnText","answerListTitle","AnswersListTitle","getRandomNumber","max","Math","floor","random","Question","question","questionsHistory","texts","showAnswers","answerId","answer","questions","questionNumber","length","newQuestion","setTimeout","answerNumber","finalAnswers","finalAnswer","slice","onExitFromQuestion","SwitchTransition","mode","CSSTransition","classNames","timeout","TrackTitle","mountOnEnter","unmountOnExit","in","CompanyLogo","Spinner","Loader","App","companiesFromJson","selectedCompanyId","loading","companyId","fetch","then","response","json","responseJson","forEach","comp","JSON","parse","adv_json","catch","error","console","layout","Container","target","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.350a511d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackText\":\"track-text_TrackText__2dIWK\",\"TextsList\":\"track-text_TextsList__2pfnt\",\"TextItem\":\"track-text_TextItem__2tBRI\",\"TextBlock\":\"track-text_TextBlock__12JDr\",\"Answer\":\"track-text_Answer__2SqgA\",\"Question\":\"track-text_Question__2V6fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1pKq0\",\"Normal\":\"button_Normal__3qaHR\",\"Back\":\"button_Back__1fxxN\",\"Disabled\":\"button_Disabled__3WvcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Company\":\"company_Company__3bw3E\",\"Image\":\"company_Image__3brmL\",\"Title\":\"company_Title__3oUO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompaniesList\":\"companiesList_CompaniesList__1CH7p\",\"Header\":\"companiesList_Header__1Zyrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Track\":\"track_Track__1Wml_\",\"Vizualizer\":\"track_Vizualizer__13uqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"answers-list_AnswersList__3Nwai\",\"AnswersListTitle\":\"answers-list_AnswersListTitle__3BA6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"question_Question__9j6yb\",\"TrackTitle\":\"question_TrackTitle__O82jv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompanyLogo\":\"company-logo_CompanyLogo__33HuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__3Lfuh\",\"load2\":\"spinner_load2__1K_Uo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"app_Container__34XC_\"};","import Company from \"./company\";\r\nexport default Company;\r\n","import React from \"react\";\r\nimport classes from \"./company.module.css\";\r\n\r\nconst Company = ({ company, onCompanySelected }) => {\r\n    return (\r\n        <div\r\n            className={classes.Company}\r\n            onClick={() => onCompanySelected(company.id)}\r\n        >\r\n            <img\r\n                className={classes.Image}\r\n                src={company.image}\r\n                alt={company.title}\r\n            />\r\n            <span className={classes.Title}>{company.title}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Company;\r\n","import CompaniesList from \"./companies-list\";\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport Company from \"./company\";\r\nimport classes from \"./companiesList.module.css\";\r\n\r\nconst CompaniesList = ({ companies, onCompanySelected }) => {\r\n    const list = Object.keys(companies).map((key) => {\r\n        const company = companies[key];\r\n        return (\r\n            <Company\r\n                key={company.id}\r\n                company={company}\r\n                onCompanySelected={onCompanySelected}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            <p className={classes.Header}>Choose a Brand Category</p>\r\n\r\n            <div className={classes.CompaniesList}>{list}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./track-text.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass TrackText extends Component {\r\n  render() {\r\n    const textsList = this.props.texts.slice(-3).map(({ text, type }) => {\r\n      const typeClass = type === \"question\" ? classes.Question : classes.Answer;\r\n      return (\r\n        <CSSTransition key={text} timeout={700} classNames=\"texts\">\r\n          <li className={`${classes.TextItem} ${typeClass}`}>\r\n            <span className={classes.TextBlock}>- {text}</span>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className={classes.TrackText}>\r\n        <ul className={classes.TextsList}>\r\n          <TransitionGroup>{textsList}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackText;\r\n","import Track from \"./track\";\r\nexport default Track;\r\n","import React, { Component, createRef } from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nimport classes from \"./track.module.css\";\r\nimport AudioSpectrum from \"react-audio-spectrum\";\r\n\r\nclass Track extends Component {\r\n  state = {\r\n    audioCanPlay: false,\r\n    autoPlay: false,\r\n  };\r\n  //must play on track prop changes\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.track !== prevProps.track) {\r\n      this.player.current.audio.current.play();\r\n    }\r\n  }\r\n  player = createRef();\r\n\r\n  onAudioCanPlay = () => {\r\n    this.setState({\r\n      audioCanPlay: true,\r\n      autoPlay: true,\r\n    });\r\n  };\r\n  onStartPlaying = () => {\r\n    this.setState({\r\n      autoPlay: true,\r\n    });\r\n  };\r\n  render() {\r\n    const { track, onTrackEnded } = this.props;\r\n    let vizualizer = null;\r\n\r\n    if (this.state.audioCanPlay) {\r\n      vizualizer = (\r\n        <div className={classes.Vizualizer}>\r\n          <AudioSpectrum\r\n            id=\"audio-canvas\"\r\n            height={100}\r\n            width={300}\r\n            audioEle={this.player.current.audio.current}\r\n            capColor={\"#FF2A73\"}\r\n            capHeight={2}\r\n            meterWidth={10}\r\n            meterCount={512}\r\n            meterColor={[\r\n              { stop: 0, color: \"#3D58F4\" },\r\n              { stop: 0.5, color: \"#883CD0\" },\r\n              { stop: 1, color: \"#D924AC\" },\r\n            ]}\r\n            gap={4}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Track}>\r\n        {vizualizer}\r\n        <AudioPlayer\r\n          customAdditionalControls={[]}\r\n          showJumpControls={false}\r\n          src={track}\r\n          autoPlay={this.state.autoPlay}\r\n          onEnded={onTrackEnded}\r\n          ref={this.player}\r\n          onCanPlay={this.onAudioCanPlay}\r\n          onPlay={this.onStartPlaying}\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import Button from \"./button\";\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./button.module.css\";\r\n\r\nconst Button = ({ text, clicked, type }) => {\r\n  let btnClass = null;\r\n  let disabled = false;\r\n  switch (type) {\r\n    case \"back\":\r\n      btnClass = classes.Back;\r\n      break;\r\n    case \"normal\":\r\n      btnClass = classes.Normal;\r\n      break;\r\n    case \"disabled\":\r\n      btnClass = classes.Disabled;\r\n      disabled = true;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <button\r\n      onClick={clicked}\r\n      className={`${classes.Button} ${btnClass}`}\r\n      disabled={disabled}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import AnswersList from \"./answers-list\";\r\nexport default AnswersList;\r\n","import React from \"react\";\r\nimport Button from \"../../ui/button\";\r\nimport classes from \"./answers-list.module.css\";\r\n\r\nconst AnswersList = ({\r\n  answers,\r\n  onAnswerSelected,\r\n  onBackClicked,\r\n  selectedAnswer,\r\n}) => {\r\n  let list = null;\r\n  if (answers) {\r\n    list = Object.keys(answers).map((key) => {\r\n      return (\r\n        <Button\r\n          key={key}\r\n          clicked={() => onAnswerSelected(key)}\r\n          text={answers[key].btnText}\r\n          type={selectedAnswer === key ? \"disabled\" : \"normal\"}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  const answerListTitle = answers ? (\r\n    <h3 className={classes.AnswersListTitle}>Choose User’s Intent</h3>\r\n  ) : null;\r\n  return (\r\n    <div className={classes.AnswersList}>\r\n      {answerListTitle}\r\n      <div>{list}</div>\r\n      <Button clicked={onBackClicked} text=\"Back\" type=\"back\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswersList;\r\n","export const getRandomNumber = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n","import Question from \"./question\";\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport TrackText from \"./track-text\";\r\nimport Track from \"./track\";\r\nimport AnswersList from \"./answers-list\";\r\nimport classes from \"./question.module.css\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\n\r\nclass Question extends Component {\r\n  state = {\r\n    question: this.props.question,\r\n    answers: this.props.question.answers,\r\n    title: this.props.question.title,\r\n    track: this.props.question.track,\r\n    questionsHistory: [],\r\n    texts: [{ text: this.props.question.text, type: \"question\" }],\r\n    selectedAnswer: null,\r\n    showAnswers: false,\r\n  };\r\n\r\n  onAnswerSelected = (answerId) => {\r\n    const answer = this.state.answers[answerId];\r\n    if (answer.questions) {\r\n      //if current answer has another question\r\n      const questionNumber = getRandomNumber(answer.questions.length);\r\n      const newQuestion = answer.questions[questionNumber];\r\n      this.setState(({ texts, questionsHistory, question }) => {\r\n        return {\r\n          texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n          title: newQuestion.title,\r\n          track: newQuestion.track,\r\n          selectedAnswer: answerId,\r\n          questionsHistory: [...questionsHistory, question], //add current question to history array\r\n          showAnswers: false,\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        this.setState(({ texts }) => {\r\n          return {\r\n            question: newQuestion,\r\n            answers: newQuestion.answers,\r\n            selectedAnswer: null,\r\n            title: newQuestion.title,\r\n            texts: [...texts, { text: newQuestion.text, type: \"question\" }],\r\n          };\r\n        });\r\n      }, 800);\r\n    } else {\r\n      // if current answer has no other questions it must have final answer from server\r\n      const answerNumber = getRandomNumber(answer.finalAnswers.length);\r\n      const finalAnswer = answer.finalAnswers[answerNumber];\r\n      this.setState(({ texts, questionsHistory, question }) => {\r\n        return {\r\n          texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n          title: finalAnswer.title,\r\n          track: finalAnswer.track,\r\n          selectedAnswer: answerId,\r\n          //questionsHistory: [...questionsHistory, question], //add current question to history array\r\n          showAnswers: false,\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        this.setState(({ texts }) => {\r\n          return {\r\n            title: finalAnswer.title,\r\n            texts: [...texts, { text: finalAnswer.text, type: \"question\" }],\r\n          };\r\n        });\r\n      }, 800);\r\n    }\r\n  };\r\n\r\n  onTrackEnded = () => {\r\n    this.setState({\r\n      showAnswers: true,\r\n    });\r\n  };\r\n\r\n  onBackClicked = () => {\r\n    if (this.state.questionsHistory.length === 0) {\r\n      this.props.onExitFromQuestion();\r\n      return;\r\n    }\r\n\r\n    this.setState(({ texts, questionsHistory }) => {\r\n      return {\r\n        question: questionsHistory[questionsHistory.length - 1],\r\n        answers: questionsHistory[questionsHistory.length - 1].answers,\r\n        title: questionsHistory[questionsHistory.length - 1].title,\r\n        track: questionsHistory[questionsHistory.length - 1].track,\r\n        selectedAnswer: null,\r\n        questionsHistory: questionsHistory.slice(\r\n          0,\r\n          questionsHistory.length - 1\r\n        ),\r\n        texts: texts.slice(0, texts.length - 2),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { track, showAnswers, answers, title, selectedAnswer } = this.state;\r\n\r\n    return (\r\n      <div className={classes.Question}>\r\n        {/* <TrackText texts={texts} /> */}\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition classNames=\"track-title\" timeout={500} key={title}>\r\n            <h3 className={classes.TrackTitle}>{title}</h3>\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n\r\n        <Track track={track} onTrackEnded={this.onTrackEnded} />\r\n        <CSSTransition\r\n          classNames=\"answers-list\"\r\n          timeout={800}\r\n          mountOnEnter\r\n          unmountOnExit\r\n          in={showAnswers}\r\n        >\r\n          <div>\r\n            <AnswersList\r\n              answers={answers ? answers : null}\r\n              onAnswerSelected={this.onAnswerSelected}\r\n              onBackClicked={this.onBackClicked}\r\n              selectedAnswer={selectedAnswer}\r\n            />\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import CompanyLogo from \"./company-logo\";\r\nexport default CompanyLogo;\r\n","import React from \"react\";\r\nimport classes from \"./company-logo.module.css\";\r\n\r\nconst CompanyLogo = ({ title, image }) => {\r\n    return (\r\n        <div className={classes.CompanyLogo}>\r\n            <img src={image} alt={title} />\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompanyLogo;\r\n","import Spinner from \"./spinner\";\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport classes from \"./spinner.module.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Loader}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport CompaniesList from \"../companies-list\";\r\nimport Question from \"../question\";\r\nimport CompanyLogo from \"../company-logo\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\nimport Spinner from \"../ui/spinner\";\r\nimport \"./animations.css\";\r\nimport classes from \"./app.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    companies: [],\r\n    companiesFromJson: {},\r\n    selectedCompanyId: null,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    return fetch(`/wp-json/wp/v2/companies`)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        const companies = {};\r\n        responseJson.forEach((company) => {\r\n          const comp = JSON.parse(company.adv_json);\r\n          companies[comp.id] = comp;\r\n        });\r\n        this.setState({\r\n          companies: companies,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  onCompanySelected = (companyId) => {\r\n    this.setState({\r\n      selectedCompanyId: companyId,\r\n    });\r\n  };\r\n\r\n  onExitFromQuestion = () => {\r\n    this.setState({\r\n      selectedCompanyId: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { companies, selectedCompanyId, loading } = this.state;\r\n\r\n    let layout = <Spinner />;\r\n    if (!loading) {\r\n      layout = (\r\n        <CompaniesList\r\n          companies={companies}\r\n          onCompanySelected={this.onCompanySelected}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (selectedCompanyId) {\r\n      const questionNumber = getRandomNumber(\r\n        companies[selectedCompanyId].questions.length\r\n      );\r\n      layout = (\r\n        <div>\r\n          <CompanyLogo\r\n            image={companies[selectedCompanyId].image}\r\n            title={companies[selectedCompanyId].title}\r\n          />\r\n          <Question\r\n            question={companies[selectedCompanyId].questions[questionNumber]}\r\n            onExitFromQuestion={this.onExitFromQuestion}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Container}>\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition\r\n            key={selectedCompanyId || loading}\r\n            classNames=\"layout\"\r\n            timeout={400}\r\n          >\r\n            {layout}\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\n\r\nconst target = document.getElementById(\"caseStudiesApp\");\r\n\r\nif (target) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    target\r\n  );\r\n}\r\n"],"sourceRoot":""}