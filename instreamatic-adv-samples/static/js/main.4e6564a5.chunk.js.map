{"version":3,"sources":["components/question/track-text/track-text.module.css","components/companies-list/company/company.module.css","components/ui/button/button.module.css","components/companies-list/companiesList.module.css","components/question/track/track.module.css","components/question/answers-list/answers-list.module.css","components/question/question.module.css","components/company-logo/company-logo.module.css","components/ui/spinner/spinner.module.css","components/app/app.module.css","components/companies-list/company/index.js","components/companies-list/company/company.js","components/companies-list/index.js","components/companies-list/companies-list.js","components/question/track-text/track-text.js","components/question/track/index.js","components/question/track/track.js","components/ui/button/index.js","components/ui/button/button.js","components/question/answers-list/index.js","components/question/answers-list/answers-list.js","utils.js","components/question/index.js","components/question/question.js","components/company-logo/index.js","components/company-logo/company-logo.js","components/ui/spinner/index.js","components/ui/spinner/spinner.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Company","company","onCompanySelected","className","classes","onClick","id","Image","src","image","alt","title","Title","CompaniesList","companies","list","Object","keys","map","key","Header","Component","Track","state","audioPlaying","player","createRef","onAudioPlaying","setState","prevProps","this","props","track","current","audio","play","onTrackEnded","vizualizer","Vizualizer","height","width","audioEle","capColor","capHeight","meterWidth","meterCount","meterColor","stop","color","gap","customAdditionalControls","showJumpControls","autoPlay","onEnded","ref","onCanPlay","crossOrigin","Button","text","clicked","btnClass","type","Back","Normal","AnswersList","answers","onAnswerSelected","onBackClicked","btnText","answerListTitle","AnswersListTitle","getRandomNumber","max","Math","floor","random","Question","question","questionsHistory","texts","showAnswers","answer","questions","questionNumber","length","newQuestion","setTimeout","answerNumber","finalAnswers","finalAnswer","slice","onExitFromQuestion","SwitchTransition","mode","CSSTransition","classNames","timeout","TrackTitle","mountOnEnter","unmountOnExit","in","CompanyLogo","Spinner","Loader","App","companiesFromJson","selectedCompanyId","loading","companyId","fetch","then","response","json","responseJson","comp","JSON","parse","adv_json","catch","error","console","layout","Container","target","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e6564a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackText\":\"track-text_TrackText__2dIWK\",\"TextsList\":\"track-text_TextsList__2pfnt\",\"TextItem\":\"track-text_TextItem__2tBRI\",\"TextBlock\":\"track-text_TextBlock__12JDr\",\"Answer\":\"track-text_Answer__2SqgA\",\"Question\":\"track-text_Question__2V6fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Company\":\"company_Company__3bw3E\",\"Image\":\"company_Image__3brmL\",\"Title\":\"company_Title__3oUO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1pKq0\",\"Normal\":\"button_Normal__3qaHR\",\"Back\":\"button_Back__1fxxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompaniesList\":\"companiesList_CompaniesList__1CH7p\",\"Header\":\"companiesList_Header__1Zyrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Track\":\"track_Track__1Wml_\",\"Vizualizer\":\"track_Vizualizer__13uqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"answers-list_AnswersList__3Nwai\",\"AnswersListTitle\":\"answers-list_AnswersListTitle__3BA6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"question_Question__9j6yb\",\"TrackTitle\":\"question_TrackTitle__O82jv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompanyLogo\":\"company-logo_CompanyLogo__33HuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__3Lfuh\",\"load2\":\"spinner_load2__1K_Uo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"app_Container__34XC_\"};","import Company from \"./company\";\r\nexport default Company;\r\n","import React from \"react\";\r\nimport classes from \"./company.module.css\";\r\n\r\nconst Company = ({ company, onCompanySelected }) => {\r\n    return (\r\n        <div\r\n            className={classes.Company}\r\n            onClick={() => onCompanySelected(company.id)}\r\n        >\r\n            <img\r\n                className={classes.Image}\r\n                src={company.image}\r\n                alt={company.title}\r\n            />\r\n            <span className={classes.Title}>{company.title}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Company;\r\n","import CompaniesList from \"./companies-list\";\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport Company from \"./company\";\r\nimport classes from \"./companiesList.module.css\";\r\n\r\nconst CompaniesList = ({ companies, onCompanySelected }) => {\r\n  const list = Object.keys(companies).map((key) => {\r\n    const company = companies[key];\r\n    return (\r\n      <Company\r\n        key={company.id}\r\n        company={company}\r\n        onCompanySelected={onCompanySelected}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <p className={classes.Header}>Select sample</p>\r\n\r\n      <div className={classes.CompaniesList}>{list}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./track-text.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass TrackText extends Component {\r\n  render() {\r\n    const textsList = this.props.texts.slice(-3).map(({ text, type }) => {\r\n      const typeClass = type === \"question\" ? classes.Question : classes.Answer;\r\n      return (\r\n        <CSSTransition key={text} timeout={700} classNames=\"texts\">\r\n          <li className={`${classes.TextItem} ${typeClass}`}>\r\n            <span className={classes.TextBlock}>- {text}</span>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className={classes.TrackText}>\r\n        <ul className={classes.TextsList}>\r\n          <TransitionGroup>{textsList}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackText;\r\n","import Track from \"./track\";\r\nexport default Track;\r\n","import React, { Component, createRef } from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nimport classes from \"./track.module.css\";\r\nimport AudioSpectrum from \"react-audio-spectrum\";\r\n\r\nclass Track extends Component {\r\n  state = {\r\n    audioPlaying: false,\r\n  };\r\n  //must play on track prop changes\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.track !== prevProps.track) {\r\n      this.player.current.audio.current.play();\r\n    }\r\n  }\r\n  player = createRef();\r\n\r\n  onAudioPlaying = () => {\r\n    this.setState({\r\n      audioPlaying: true,\r\n    });\r\n  };\r\n  render() {\r\n    const { track, onTrackEnded } = this.props;\r\n    let vizualizer = null;\r\n\r\n    if (this.state.audioPlaying) {\r\n      vizualizer = (\r\n        <div className={classes.Vizualizer}>\r\n          <AudioSpectrum\r\n            id=\"audio-canvas\"\r\n            height={100}\r\n            width={300}\r\n            audioEle={this.player.current.audio.current}\r\n            capColor={\"#FF2A73\"}\r\n            capHeight={2}\r\n            meterWidth={10}\r\n            meterCount={512}\r\n            meterColor={[\r\n              { stop: 0, color: \"#3D58F4\" },\r\n              { stop: 0.5, color: \"#883CD0\" },\r\n              { stop: 1, color: \"#D924AC\" },\r\n            ]}\r\n            gap={4}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Track}>\r\n        {vizualizer}\r\n        <AudioPlayer\r\n          customAdditionalControls={[]}\r\n          showJumpControls={false}\r\n          src={track}\r\n          autoPlay\r\n          onEnded={onTrackEnded}\r\n          ref={this.player}\r\n          onCanPlay={this.onAudioPlaying}\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import Button from \"./button\";\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./button.module.css\";\r\n\r\nconst Button = ({ text, clicked, type }) => {\r\n  let btnClass = null;\r\n  switch (type) {\r\n    case \"back\":\r\n      btnClass = classes.Back;\r\n      break;\r\n    case \"normal\":\r\n      btnClass = classes.Normal;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <button onClick={clicked} className={`${classes.Button} ${btnClass}`}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import AnswersList from \"./answers-list\";\r\nexport default AnswersList;\r\n","import React from \"react\";\r\nimport Button from \"../../ui/button\";\r\nimport classes from \"./answers-list.module.css\";\r\n\r\nconst AnswersList = ({ answers, onAnswerSelected, onBackClicked }) => {\r\n  let list = null;\r\n  if (answers) {\r\n    list = Object.keys(answers).map((key) => {\r\n      return (\r\n        <Button\r\n          key={key}\r\n          clicked={() => onAnswerSelected(answers[key])}\r\n          text={answers[key].btnText}\r\n          type=\"normal\"\r\n        />\r\n      );\r\n    });\r\n  }\r\n  const answerListTitle = answers ? (\r\n    <h3 className={classes.AnswersListTitle}>Choose user’s intent</h3>\r\n  ) : null;\r\n  return (\r\n    <div className={classes.AnswersList}>\r\n      {answerListTitle}\r\n      <div>{list}</div>\r\n      <Button clicked={onBackClicked} text=\"Back\" type=\"back\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswersList;\r\n","export const getRandomNumber = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n","import Question from \"./question\";\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport TrackText from \"./track-text\";\r\nimport Track from \"./track\";\r\nimport AnswersList from \"./answers-list\";\r\nimport classes from \"./question.module.css\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\n\r\nclass Question extends Component {\r\n  state = {\r\n    question: this.props.question,\r\n    questionsHistory: [],\r\n    texts: [{ text: this.props.question.text, type: \"question\" }],\r\n    track: this.props.question.track,\r\n    showAnswers: false,\r\n  };\r\n\r\n  onAnswerSelected = (answer) => {\r\n    if (answer.questions) {\r\n      //if current answer has another question\r\n      const questionNumber = getRandomNumber(answer.questions.length);\r\n      const newQuestion = answer.questions[questionNumber];\r\n      this.setState(({ texts, questionsHistory, question }) => {\r\n        return {\r\n          texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n          track: newQuestion.track,\r\n          questionsHistory: [...questionsHistory, question], //add current question to history array\r\n          showAnswers: false,\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        this.setState(({ texts }) => {\r\n          return {\r\n            question: newQuestion,\r\n            texts: [...texts, { text: newQuestion.text, type: \"question\" }],\r\n          };\r\n        });\r\n      }, 800);\r\n    } else {\r\n      // if current answer has no other questions it must have final answer from server\r\n      const answerNumber = getRandomNumber(answer.finalAnswers.length);\r\n      const finalAnswer = answer.finalAnswers[answerNumber];\r\n      this.setState(({ texts, questionsHistory, question }) => {\r\n        return {\r\n          texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n          track: finalAnswer.track,\r\n          questionsHistory: [...questionsHistory, question], //add current question to history array\r\n          showAnswers: false,\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        this.setState(({ texts }) => {\r\n          return {\r\n            question: finalAnswer,\r\n            texts: [...texts, { text: finalAnswer.text, type: \"question\" }],\r\n          };\r\n        });\r\n      }, 800);\r\n    }\r\n  };\r\n\r\n  onTrackEnded = () => {\r\n    this.setState({\r\n      showAnswers: true,\r\n    });\r\n  };\r\n\r\n  onBackClicked = () => {\r\n    if (this.state.questionsHistory.length === 0) {\r\n      this.props.onExitFromQuestion();\r\n      return;\r\n    }\r\n\r\n    this.setState(({ texts, questionsHistory }) => {\r\n      return {\r\n        question: questionsHistory[questionsHistory.length - 1],\r\n        track: questionsHistory[questionsHistory.length - 1].track,\r\n        questionsHistory: questionsHistory.slice(\r\n          0,\r\n          questionsHistory.length - 1\r\n        ),\r\n        answer: null,\r\n        texts: texts.slice(0, texts.length - 2),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { question, track, texts, showAnswers } = this.state;\r\n\r\n    return (\r\n      <div className={classes.Question}>\r\n        {/* <TrackText texts={texts} /> */}\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition\r\n            classNames=\"track-title\"\r\n            timeout={500}\r\n            key={question.title}\r\n          >\r\n            <h3 className={classes.TrackTitle}>{question.title}</h3>\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n\r\n        <Track track={track} onTrackEnded={this.onTrackEnded} />\r\n        <CSSTransition\r\n          classNames=\"answers-list\"\r\n          timeout={800}\r\n          mountOnEnter\r\n          unmountOnExit\r\n          in={showAnswers}\r\n        >\r\n          <div>\r\n            <AnswersList\r\n              answers={question ? question.answers : null}\r\n              onAnswerSelected={this.onAnswerSelected}\r\n              onBackClicked={this.onBackClicked}\r\n            />\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import CompanyLogo from \"./company-logo\";\r\nexport default CompanyLogo;\r\n","import React from \"react\";\r\nimport classes from \"./company-logo.module.css\";\r\n\r\nconst CompanyLogo = ({ title, image }) => {\r\n    return (\r\n        <div className={classes.CompanyLogo}>\r\n            <img src={image} alt={title} />\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompanyLogo;\r\n","import Spinner from \"./spinner\";\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport classes from \"./spinner.module.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Loader}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport CompaniesList from \"../companies-list\";\r\nimport Question from \"../question\";\r\nimport CompanyLogo from \"../company-logo\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\nimport Spinner from \"../ui/spinner\";\r\nimport \"./animations.css\";\r\nimport classes from \"./app.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    companies: [],\r\n    companiesFromJson: {},\r\n    selectedCompanyId: null,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    return fetch(`http://instreamatic.lc/wp-json/wp/v2/companies`)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        const companies = {};\r\n        responseJson.map((company) => {\r\n          const comp = JSON.parse(company.adv_json);\r\n          companies[comp.id] = comp;\r\n          return;\r\n        });\r\n        this.setState({\r\n          companies: companies,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  onCompanySelected = (companyId) => {\r\n    this.setState({\r\n      selectedCompanyId: companyId,\r\n    });\r\n  };\r\n\r\n  onExitFromQuestion = () => {\r\n    this.setState({\r\n      selectedCompanyId: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { companies, selectedCompanyId, loading } = this.state;\r\n\r\n    let layout = <Spinner />;\r\n    if (!loading) {\r\n      layout = (\r\n        <CompaniesList\r\n          companies={companies}\r\n          onCompanySelected={this.onCompanySelected}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (selectedCompanyId) {\r\n      const questionNumber = getRandomNumber(\r\n        companies[selectedCompanyId].questions.length\r\n      );\r\n      layout = (\r\n        <div>\r\n          <CompanyLogo\r\n            image={companies[selectedCompanyId].image}\r\n            title={companies[selectedCompanyId].title}\r\n          />\r\n          <Question\r\n            question={companies[selectedCompanyId].questions[questionNumber]}\r\n            onExitFromQuestion={this.onExitFromQuestion}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Container}>\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition\r\n            key={selectedCompanyId || loading}\r\n            classNames=\"layout\"\r\n            timeout={400}\r\n          >\r\n            {layout}\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\n\r\nconst target = document.getElementById(\"caseStudiesApp\");\r\n\r\nif (target) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    target\r\n  );\r\n}\r\n"],"sourceRoot":""}