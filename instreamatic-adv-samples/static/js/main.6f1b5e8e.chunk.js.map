{"version":3,"sources":["components/question/track-text/track-text.module.css","components/ui/button/button.module.css","components/companies-list/company/company.module.css","components/companies-list/companiesList.module.css","components/question/track/track.module.css","components/question/answers-list/answers-list.module.css","components/question/question.module.css","components/company-logo/company-logo.module.css","components/ui/spinner/spinner.module.css","components/app/app.module.css","components/companies-list/company/index.js","components/companies-list/company/company.js","components/companies-list/index.js","components/companies-list/companies-list.js","components/question/track-text/track-text.js","components/question/track/index.js","components/question/track/track.js","components/ui/button/index.js","components/ui/button/button.js","components/question/answers-list/index.js","components/question/answers-list/answers-list.js","utils.js","components/question/index.js","components/question/question.js","components/company-logo/index.js","components/company-logo/company-logo.js","components/ui/spinner/index.js","components/ui/spinner/spinner.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","Company","company","onCompanySelected","className","classes","to","pathName","state","sampleId","id","Image","src","image","alt","title","Title","CompaniesList","companies","list","Object","keys","map","key","Header","Component","Track","audioPlaying","autoPlay","player","createRef","onAudioPlaying","setState","prevProps","this","props","track","current","audio","play","onTrackEnded","vizualizer","Vizualizer","height","width","audioEle","capColor","capHeight","meterWidth","meterCount","meterColor","stop","color","gap","customAdditionalControls","showJumpControls","onEnded","ref","onCanPlay","crossOrigin","Button","text","clicked","btnClass","disabled","type","Back","Normal","Disabled","onClick","AnswersList","answers","onAnswerSelected","onBackClicked","selectedAnswer","btnText","answerListTitle","AnswersListTitle","getRandomNumber","max","Math","floor","random","Question","question","questionsHistory","texts","showAnswers","answerId","answer","questions","questionNumber","length","newQuestion","setTimeout","answerNumber","finalAnswers","finalAnswer","slice","onExitFromQuestion","SwitchTransition","mode","CSSTransition","classNames","timeout","TrackTitle","mountOnEnter","unmountOnExit","in","CompanyLogo","Spinner","Loader","App","companiesFromJson","selectedCompanyId","loading","companyId","history","push","fetch","then","response","json","responseJson","forEach","comp","JSON","parse","adv_json","catch","error","console","location","companiesLayout","questionLayout","Container","path","render","exact","withRouter","target","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6f1b5e8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackText\":\"track-text_TrackText__eE88Y\",\"TextsList\":\"track-text_TextsList__2pSeE\",\"TextItem\":\"track-text_TextItem__2Cro9\",\"TextBlock\":\"track-text_TextBlock__fR6YF\",\"Answer\":\"track-text_Answer__2oFAQ\",\"Question\":\"track-text_Question__1jLGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1SEfh\",\"Normal\":\"button_Normal__3QK9H\",\"Back\":\"button_Back__3QHS7\",\"Disabled\":\"button_Disabled__j8nFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Company\":\"company_Company__n_9oq\",\"Image\":\"company_Image__vpx2S\",\"Title\":\"company_Title__3GNK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompaniesList\":\"companiesList_CompaniesList__bN5mQ\",\"Header\":\"companiesList_Header__2C74i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Track\":\"track_Track__1CqzP\",\"Vizualizer\":\"track_Vizualizer__28JUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"answers-list_AnswersList__28bDr\",\"AnswersListTitle\":\"answers-list_AnswersListTitle__2WbZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"question_Question__1wqGx\",\"TrackTitle\":\"question_TrackTitle__3rCoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompanyLogo\":\"company-logo_CompanyLogo__gd9dQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__1ud-C\",\"load2\":\"spinner_load2__ChAZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"app_Container__3Kwd7\"};","import Company from \"./company\";\r\nexport default Company;\r\n","import React from \"react\";\r\nimport classes from \"./company.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Company = ({ company, onCompanySelected }) => {\r\n    return (\r\n        <Link\r\n            className={classes.Company}\r\n            to={{ pathName: \"/samples/\", state: { sampleId: company.id } }}\r\n        >\r\n            <img\r\n                className={classes.Image}\r\n                src={company.image}\r\n                alt={company.title}\r\n            />\r\n            <span className={classes.Title}>{company.title}</span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Company;\r\n","import CompaniesList from \"./companies-list\";\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport Company from \"./company\";\r\nimport classes from \"./companiesList.module.css\";\r\n\r\nconst CompaniesList = ({ companies, onCompanySelected }) => {\r\n    const list = Object.keys(companies).map((key) => {\r\n        const company = companies[key];\r\n        return (\r\n            <Company\r\n                key={company.id}\r\n                company={company}\r\n                onCompanySelected={onCompanySelected}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            <p className={classes.Header}>Choose a Brand Category</p>\r\n\r\n            <div className={classes.CompaniesList}>{list}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./track-text.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass TrackText extends Component {\r\n  render() {\r\n    const textsList = this.props.texts.slice(-3).map(({ text, type }) => {\r\n      const typeClass = type === \"question\" ? classes.Question : classes.Answer;\r\n      return (\r\n        <CSSTransition key={text} timeout={700} classNames=\"texts\">\r\n          <li className={`${classes.TextItem} ${typeClass}`}>\r\n            <span className={classes.TextBlock}>- {text}</span>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className={classes.TrackText}>\r\n        <ul className={classes.TextsList}>\r\n          <TransitionGroup>{textsList}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackText;\r\n","import Track from \"./track\";\r\nexport default Track;\r\n","import React, { Component, createRef } from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nimport classes from \"./track.module.css\";\r\nimport AudioSpectrum from \"react-audio-spectrum\";\r\n\r\nclass Track extends Component {\r\n  state = {\r\n    audioPlaying: false,\r\n    autoPlay: false,\r\n  };\r\n  //must play on track prop changes\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.track !== prevProps.track) {\r\n      this.player.current.audio.current.play();\r\n    }\r\n  }\r\n  player = createRef();\r\n\r\n  onAudioPlaying = () => {\r\n    this.setState({\r\n      audioPlaying: true,\r\n      autoPlay: true,\r\n    });\r\n  };\r\n  render() {\r\n    const { track, onTrackEnded } = this.props;\r\n    let vizualizer = null;\r\n\r\n    if (this.state.audioPlaying) {\r\n      vizualizer = (\r\n        <div className={classes.Vizualizer}>\r\n          <AudioSpectrum\r\n            id=\"audio-canvas\"\r\n            height={100}\r\n            width={300}\r\n            audioEle={this.player.current.audio.current}\r\n            capColor={\"#FF2A73\"}\r\n            capHeight={2}\r\n            meterWidth={10}\r\n            meterCount={512}\r\n            meterColor={[\r\n              { stop: 0, color: \"#3D58F4\" },\r\n              { stop: 0.5, color: \"#883CD0\" },\r\n              { stop: 1, color: \"#D924AC\" },\r\n            ]}\r\n            gap={4}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Track}>\r\n        {vizualizer}\r\n        <AudioPlayer\r\n          customAdditionalControls={[]}\r\n          showJumpControls={false}\r\n          src={track}\r\n          autoPlay={this.state.autoPlay}\r\n          onEnded={onTrackEnded}\r\n          ref={this.player}\r\n          onCanPlay={this.onAudioPlaying}\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import Button from \"./button\";\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./button.module.css\";\r\n\r\nconst Button = ({ text, clicked, type }) => {\r\n  let btnClass = null;\r\n  let disabled = false;\r\n  switch (type) {\r\n    case \"back\":\r\n      btnClass = classes.Back;\r\n      break;\r\n    case \"normal\":\r\n      btnClass = classes.Normal;\r\n      break;\r\n    case \"disabled\":\r\n      btnClass = classes.Disabled;\r\n      disabled = true;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <button\r\n      onClick={clicked}\r\n      className={`${classes.Button} ${btnClass}`}\r\n      disabled={disabled}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import AnswersList from \"./answers-list\";\r\nexport default AnswersList;\r\n","import React from \"react\";\r\nimport Button from \"../../ui/button\";\r\nimport classes from \"./answers-list.module.css\";\r\n\r\nconst AnswersList = ({\r\n    answers,\r\n    onAnswerSelected,\r\n    onBackClicked,\r\n    selectedAnswer,\r\n}) => {\r\n    let list = null;\r\n    if (answers) {\r\n        list = Object.keys(answers).map((key) => {\r\n            return (\r\n                <Button\r\n                    key={key}\r\n                    clicked={() => onAnswerSelected(key)}\r\n                    text={answers[key].btnText}\r\n                    type={selectedAnswer === key ? \"disabled\" : \"normal\"}\r\n                />\r\n            );\r\n        });\r\n    }\r\n    const answerListTitle = answers ? (\r\n        <h3 className={classes.AnswersListTitle}>Choose User’s Intent</h3>\r\n    ) : null;\r\n    return (\r\n        <div className={classes.AnswersList}>\r\n            {answerListTitle}\r\n            <div>{list}</div>\r\n            <Button clicked={onBackClicked} text=\"Back\" type=\"back\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnswersList;\r\n","export const getRandomNumber = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n","import Question from \"./question\";\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport TrackText from \"./track-text\";\r\nimport Track from \"./track\";\r\nimport AnswersList from \"./answers-list\";\r\nimport classes from \"./question.module.css\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        question: this.props.question,\r\n        answers: this.props.question.answers,\r\n        title: this.props.question.title,\r\n        track: this.props.question.track,\r\n        questionsHistory: [],\r\n        texts: [{ text: this.props.question.text, type: \"question\" }],\r\n        selectedAnswer: null,\r\n        showAnswers: false,\r\n    };\r\n\r\n    onAnswerSelected = (answerId) => {\r\n        const answer = this.state.answers[answerId];\r\n\r\n        if (answer.questions) {\r\n            //if current answer has another question\r\n            const questionNumber = getRandomNumber(answer.questions.length);\r\n            const newQuestion = answer.questions[questionNumber];\r\n            this.setState(({ texts, questionsHistory, question }) => {\r\n                return {\r\n                    texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n                    title: newQuestion.title,\r\n                    track: newQuestion.track,\r\n                    selectedAnswer: answerId,\r\n                    questionsHistory: [...questionsHistory, question], //add current question to history array\r\n                    showAnswers: false,\r\n                };\r\n            });\r\n            setTimeout(() => {\r\n                this.setState(({ texts }) => {\r\n                    return {\r\n                        question: newQuestion,\r\n                        answers: newQuestion.answers,\r\n                        selectedAnswer: null,\r\n                        title: newQuestion.title,\r\n                        texts: [\r\n                            ...texts,\r\n                            { text: newQuestion.text, type: \"question\" },\r\n                        ],\r\n                    };\r\n                });\r\n            }, 800);\r\n        } else {\r\n            // if current answer has no other questions it must have final answer from server\r\n            const answerNumber = getRandomNumber(answer.finalAnswers.length);\r\n            const finalAnswer = answer.finalAnswers[answerNumber];\r\n            this.setState(({ texts, questionsHistory, question }) => {\r\n                return {\r\n                    texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n                    title: finalAnswer.title,\r\n                    track: finalAnswer.track,\r\n                    selectedAnswer: answerId,\r\n                    //questionsHistory: [...questionsHistory, question], //add current question to history array\r\n                    showAnswers: false,\r\n                };\r\n            });\r\n            setTimeout(() => {\r\n                this.setState(({ texts }) => {\r\n                    return {\r\n                        title: finalAnswer.title,\r\n                        texts: [\r\n                            ...texts,\r\n                            { text: finalAnswer.text, type: \"question\" },\r\n                        ],\r\n                    };\r\n                });\r\n            }, 800);\r\n        }\r\n    };\r\n\r\n    onTrackEnded = () => {\r\n        this.setState({\r\n            showAnswers: true,\r\n        });\r\n    };\r\n\r\n    onBackClicked = () => {\r\n        if (this.state.questionsHistory.length === 0) {\r\n            this.props.onExitFromQuestion();\r\n            return;\r\n        }\r\n\r\n        this.setState(({ texts, questionsHistory }) => {\r\n            return {\r\n                question: questionsHistory[questionsHistory.length - 1],\r\n                answers: questionsHistory[questionsHistory.length - 1].answers,\r\n                title: questionsHistory[questionsHistory.length - 1].title,\r\n                track: questionsHistory[questionsHistory.length - 1].track,\r\n                selectedAnswer: null,\r\n                questionsHistory: questionsHistory.slice(\r\n                    0,\r\n                    questionsHistory.length - 1\r\n                ),\r\n                texts: texts.slice(0, texts.length - 2),\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            track,\r\n            showAnswers,\r\n            answers,\r\n            title,\r\n            selectedAnswer,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.Question}>\r\n                {/* <TrackText texts={texts} /> */}\r\n                <SwitchTransition mode=\"out-in\">\r\n                    <CSSTransition\r\n                        classNames=\"track-title\"\r\n                        timeout={500}\r\n                        key={title}\r\n                    >\r\n                        <h3 className={classes.TrackTitle}>{title}</h3>\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n\r\n                <Track track={track} onTrackEnded={this.onTrackEnded} />\r\n                <CSSTransition\r\n                    classNames=\"answers-list\"\r\n                    timeout={800}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                    in={showAnswers}\r\n                >\r\n                    <div>\r\n                        <AnswersList\r\n                            answers={answers ? answers : null}\r\n                            onAnswerSelected={this.onAnswerSelected}\r\n                            onBackClicked={this.onBackClicked}\r\n                            selectedAnswer={selectedAnswer}\r\n                        />\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;\r\n","import CompanyLogo from \"./company-logo\";\r\nexport default CompanyLogo;\r\n","import React from \"react\";\r\nimport classes from \"./company-logo.module.css\";\r\n\r\nconst CompanyLogo = ({ title, image }) => {\r\n    return (\r\n        <div className={classes.CompanyLogo}>\r\n            <img src={image} alt={title} />\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompanyLogo;\r\n","import Spinner from \"./spinner\";\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport classes from \"./spinner.module.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Loader}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport CompaniesList from \"../companies-list\";\r\nimport Question from \"../question\";\r\nimport CompanyLogo from \"../company-logo\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\nimport Spinner from \"../ui/spinner\";\r\nimport \"./animations.css\";\r\nimport classes from \"./app.module.css\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    withRouter,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        companies: [],\r\n        companiesFromJson: {},\r\n        selectedCompanyId: null,\r\n        loading: true,\r\n    };\r\n\r\n    componentDidMount() {\r\n        return fetch(`/wp-json/wp/v2/companies`)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                const companies = {};\r\n                responseJson.forEach((company) => {\r\n                    const comp = JSON.parse(company.adv_json);\r\n                    companies[comp.id] = comp;\r\n                });\r\n                this.setState({\r\n                    companies: companies,\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    onCompanySelected = (companyId) => {\r\n        this.setState({\r\n            selectedCompanyId: companyId,\r\n        });\r\n    };\r\n\r\n    onExitFromQuestion = () => {\r\n        // this.setState({\r\n        //     selectedCompanyId: null,\r\n        // });\r\n        this.props.history.push(\"/samples\");\r\n    };\r\n\r\n    render() {\r\n        const { companies, selectedCompanyId, loading } = this.state;\r\n        const { location } = this.props;\r\n        const { sampleId } = location.state;\r\n\r\n        let companiesLayout = <Spinner />;\r\n        if (!loading) {\r\n            companiesLayout = (\r\n                <CompaniesList\r\n                    companies={companies}\r\n                    onCompanySelected={this.onCompanySelected}\r\n                />\r\n            );\r\n        }\r\n        let questionLayout = null;\r\n        if (sampleId) {\r\n            const questionNumber = getRandomNumber(\r\n                companies[sampleId].questions.length\r\n            );\r\n            questionLayout = (\r\n                <div>\r\n                    <CompanyLogo\r\n                        image={companies[sampleId].image}\r\n                        title={companies[sampleId].title}\r\n                    />\r\n                    <Question\r\n                        question={companies[sampleId].questions[questionNumber]}\r\n                        onExitFromQuestion={this.onExitFromQuestion}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className={classes.Container}>\r\n                <Router>\r\n                    <SwitchTransition mode=\"out-in\">\r\n                        <CSSTransition\r\n                            key={location.key || loading}\r\n                            classNames=\"layout\"\r\n                            timeout={400}\r\n                        >\r\n                            <Switch>\r\n                                <Route\r\n                                    path=\"/samples\"\r\n                                    render={() => {\r\n                                        return companiesLayout;\r\n                                    }}\r\n                                    exact\r\n                                />\r\n                                <Route\r\n                                    path=\"/samples/:sampleId?\"\r\n                                    render={() => {\r\n                                        return questionLayout;\r\n                                    }}\r\n                                    exact\r\n                                />\r\n                                <Route render={() => <h2>Page not found</h2>} />\r\n                            </Switch>\r\n                        </CSSTransition>\r\n                    </SwitchTransition>\r\n                </Router>\r\n                {/* <SwitchTransition mode=\"out-in\">\r\n                    <CSSTransition\r\n                        key={selectedCompanyId || loading}\r\n                        classNames=\"layout\"\r\n                        timeout={400}\r\n                    >\r\n                        {layout}\r\n                    </CSSTransition>\r\n                </SwitchTransition> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\n\r\nconst target = document.getElementById(\"caseStudiesApp\");\r\n\r\nif (target) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    target\r\n  );\r\n}\r\n"],"sourceRoot":""}