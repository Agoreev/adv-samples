{"version":3,"sources":["components/question/track/track.module.css","components/ui/button/button.module.css","components/companies-list/company/company.module.css","components/header/header.module.css","components/companies-list/companiesList.module.css","components/question/answers-list/answers-list.module.css","components/question/question.module.css","components/question/track/equalizer.svg","components/ui/spinner/spinner.module.css","components/app/app.module.css","components/companies-list/company/index.js","components/companies-list/company/company.js","components/companies-list/index.js","components/companies-list/companies-list.js","components/question/track/index.js","components/question/track/track.js","components/ui/button/index.js","components/ui/button/button.js","components/question/answers-list/index.js","components/question/answers-list/answers-list.js","utils.js","components/question/index.js","components/question/question.js","components/header/index.js","components/header/header.js","components/ui/spinner/index.js","components/ui/spinner/spinner.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","Company","company","className","classes","to","id","Image","src","image","alt","title","Title","CompaniesList","companies","list","Object","keys","map","key","Header","Track","state","audioCanPlay","audioPlaying","player","createRef","onAudioCanPlay","setState","onAudioPlaying","onAudioPaused","onAudioEnded","props","onTrackEnded","prevProps","this","track","current","audio","play","vizualizer","Vizualizer","isSafari","SVGVizualizer","CSSTransition","in","classNames","mountOnEnter","unmountOnExit","timeout","equalizer","height","width","audioEle","capColor","capHeight","meterWidth","meterCount","meterColor","stop","color","gap","customAdditionalControls","showJumpControls","onPause","onEnded","ref","onCanPlay","onPlay","crossOrigin","Component","Button","text","clicked","btnClass","disabled","type","Back","Normal","Disabled","onClick","AnswersList","answers","onAnswerSelected","onBackClicked","selectedAnswer","btnText","answerListTitle","AnswersListTitle","getRandomNumber","max","Math","floor","random","Question","question","questionsHistory","texts","showAnswers","answerId","answer","questions","questionNumber","length","newQuestion","setTimeout","answerNumber","finalAnswers","finalAnswer","slice","onExitFromQuestion","SwitchTransition","mode","TrackTitle","withRouter","location","BackLink","pathname","LogoWrapper","Spinner","Loader","App","loading","history","push","fetch","then","response","json","responseJson","forEach","comp","JSON","parse","adv_json","catch","error","console","sampleId","qs","search","ignoreQueryPrefix","layoutKey","layout","Container","target","document","getElementById","ReactDOM","render","StrictMode","path","component"],"mappings":"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","file":"static/js/main.a40c2ac3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Track\":\"track_Track__1CqzP\",\"Vizualizer\":\"track_Vizualizer__28JUX\",\"SVGVizualizer\":\"track_SVGVizualizer__Qp7iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1SEfh\",\"Normal\":\"button_Normal__3QK9H\",\"Back\":\"button_Back__3QHS7\",\"Disabled\":\"button_Disabled__j8nFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Company\":\"company_Company__n_9oq\",\"Image\":\"company_Image__vpx2S\",\"Title\":\"company_Title__3GNK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"header_Header__2eN3d\",\"BackLink\":\"header_BackLink__1hdx9\",\"LogoWrapper\":\"header_LogoWrapper__3aUJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompaniesList\":\"companiesList_CompaniesList__bN5mQ\",\"Header\":\"companiesList_Header__2C74i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"answers-list_AnswersList__28bDr\",\"AnswersListTitle\":\"answers-list_AnswersListTitle__2WbZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"question_Question__1wqGx\",\"TrackTitle\":\"question_TrackTitle__3rCoy\"};","module.exports = __webpack_public_path__ + \"static/media/equalizer.1926eb64.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__1ud-C\",\"load2\":\"spinner_load2__ChAZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"app_Container__3Kwd7\"};","import Company from \"./company\";\r\nexport default Company;\r\n","import React from \"react\";\r\nimport classes from \"./company.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Company = ({ company }) => {\r\n  return (\r\n    <Link className={classes.Company} to={`?sampleId=${company.id}`}>\r\n      <img className={classes.Image} src={company.image} alt={company.title} />\r\n      <span className={classes.Title}>{company.title}</span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import CompaniesList from \"./companies-list\";\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport Company from \"./company\";\r\nimport classes from \"./companiesList.module.css\";\r\n\r\nconst CompaniesList = ({ companies }) => {\r\n    const list = Object.keys(companies).map((key) => {\r\n        const company = companies[key];\r\n        return <Company key={company.id} company={company} />;\r\n    });\r\n    return (\r\n        <div>\r\n            <p className={classes.Header}>Choose a Brand Category</p>\r\n\r\n            <div className={classes.CompaniesList}>{list}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompaniesList;\r\n","import Track from \"./track\";\r\nexport default Track;\r\n","import React, { Component, createRef } from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nimport classes from \"./track.module.css\";\r\nimport AudioSpectrum from \"react-audio-spectrum\";\r\nimport { isSafari } from \"react-device-detect\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport equalizer from \"./equalizer.svg\";\r\n\r\nclass Track extends Component {\r\n    state = {\r\n        audioCanPlay: false,\r\n        audioPlaying: false,\r\n    };\r\n    //must play on track prop changes\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.track !== prevProps.track) {\r\n            this.player.current.audio.current.play();\r\n        }\r\n    }\r\n    player = createRef();\r\n\r\n    onAudioCanPlay = () => {\r\n        this.setState({\r\n            audioCanPlay: true,\r\n        });\r\n    };\r\n\r\n    onAudioPlaying = () => {\r\n        this.setState({\r\n            audioPlaying: true,\r\n        });\r\n    };\r\n\r\n    onAudioPaused = () => {\r\n        this.setState({\r\n            audioPlaying: false,\r\n        });\r\n    };\r\n\r\n    onAudioEnded = () => {\r\n        this.setState({\r\n            audioPlaying: false,\r\n        });\r\n        this.props.onTrackEnded();\r\n    };\r\n\r\n    render() {\r\n        const { track } = this.props;\r\n\r\n        let vizualizer = <div className={classes.Vizualizer}></div>;\r\n\r\n        if (this.state.audioCanPlay) {\r\n            if (!isSafari) {\r\n                vizualizer = (\r\n                    <div className={classes.Vizualizer}>\r\n                        <AudioSpectrum\r\n                            id=\"audio-canvas\"\r\n                            height={100}\r\n                            width={300}\r\n                            audioEle={this.player.current.audio.current}\r\n                            capColor={\"#FF2A73\"}\r\n                            capHeight={2}\r\n                            meterWidth={10}\r\n                            meterCount={512}\r\n                            meterColor={[\r\n                                { stop: 0, color: \"#3D58F4\" },\r\n                                { stop: 0.5, color: \"#883CD0\" },\r\n                                { stop: 1, color: \"#D924AC\" },\r\n                            ]}\r\n                            gap={4}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                //In safari AudioSpectrum doesn't work\r\n                vizualizer = (\r\n                    <div className={classes.SVGVizualizer}>\r\n                        <CSSTransition\r\n                            in={this.state.audioPlaying}\r\n                            classNames=\"vizualizer\"\r\n                            mountOnEnter\r\n                            unmountOnExit\r\n                            timeout={500}\r\n                        >\r\n                            <img src={equalizer} alt=\"Equalizer\" />\r\n                        </CSSTransition>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <div className={classes.Track}>\r\n                {vizualizer}\r\n                <AudioPlayer\r\n                    customAdditionalControls={[]}\r\n                    showJumpControls={false}\r\n                    src={track}\r\n                    onPause={this.onAudioPaused}\r\n                    onEnded={this.onAudioEnded}\r\n                    ref={this.player}\r\n                    onCanPlay={this.onAudioCanPlay}\r\n                    onPlay={this.onAudioPlaying}\r\n                    crossOrigin=\"anonymous\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Track;\r\n","import Button from \"./button\";\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./button.module.css\";\r\n\r\nconst Button = ({ text, clicked, type }) => {\r\n  let btnClass = null;\r\n  let disabled = false;\r\n  switch (type) {\r\n    case \"back\":\r\n      btnClass = classes.Back;\r\n      break;\r\n    case \"normal\":\r\n      btnClass = classes.Normal;\r\n      break;\r\n    case \"disabled\":\r\n      btnClass = classes.Disabled;\r\n      disabled = true;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <button\r\n      onClick={clicked}\r\n      className={`${classes.Button} ${btnClass}`}\r\n      disabled={disabled}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import AnswersList from \"./answers-list\";\r\nexport default AnswersList;\r\n","import React from \"react\";\r\nimport Button from \"../../ui/button\";\r\nimport classes from \"./answers-list.module.css\";\r\n\r\nconst AnswersList = ({\r\n    answers,\r\n    onAnswerSelected,\r\n    onBackClicked,\r\n    selectedAnswer,\r\n}) => {\r\n    let list = null;\r\n    if (answers) {\r\n        list = Object.keys(answers).map((key) => {\r\n            return (\r\n                <Button\r\n                    key={key}\r\n                    clicked={() => onAnswerSelected(key)}\r\n                    text={answers[key].btnText}\r\n                    type={selectedAnswer === key ? \"disabled\" : \"normal\"}\r\n                />\r\n            );\r\n        });\r\n    }\r\n    const answerListTitle = answers ? (\r\n        <h3 className={classes.AnswersListTitle}>Choose User’s Intent</h3>\r\n    ) : null;\r\n    return (\r\n        <div className={classes.AnswersList}>\r\n            {answerListTitle}\r\n            <div>{list}</div>\r\n            <Button clicked={onBackClicked} text=\"Back\" type=\"back\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnswersList;\r\n","export const getRandomNumber = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n","import Question from \"./question\";\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport Track from \"./track\";\r\nimport AnswersList from \"./answers-list\";\r\nimport classes from \"./question.module.css\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        question: this.props.question,\r\n        answers: this.props.question.answers,\r\n        title: this.props.question.title,\r\n        track: this.props.question.track,\r\n        questionsHistory: [],\r\n        texts: [{ text: this.props.question.text, type: \"question\" }],\r\n        selectedAnswer: null,\r\n        showAnswers: false,\r\n    };\r\n\r\n    onAnswerSelected = (answerId) => {\r\n        const answer = this.state.answers[answerId];\r\n\r\n        if (answer.questions) {\r\n            //if current answer has another question\r\n            const questionNumber = getRandomNumber(answer.questions.length);\r\n            const newQuestion = answer.questions[questionNumber];\r\n            this.setState(({ texts, questionsHistory, question }) => {\r\n                return {\r\n                    texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n                    title: newQuestion.title,\r\n                    track: newQuestion.track,\r\n                    selectedAnswer: answerId,\r\n                    questionsHistory: [...questionsHistory, question], //add current question to history array\r\n                    showAnswers: false,\r\n                };\r\n            });\r\n            setTimeout(() => {\r\n                this.setState(({ texts }) => {\r\n                    return {\r\n                        question: newQuestion,\r\n                        answers: newQuestion.answers,\r\n                        selectedAnswer: null,\r\n                        title: newQuestion.title,\r\n                        texts: [\r\n                            ...texts,\r\n                            { text: newQuestion.text, type: \"question\" },\r\n                        ],\r\n                    };\r\n                });\r\n            }, 800);\r\n        } else {\r\n            // if current answer has no other questions it must have final answer from server\r\n            const answerNumber = getRandomNumber(answer.finalAnswers.length);\r\n            const finalAnswer = answer.finalAnswers[answerNumber];\r\n            this.setState(({ texts }) => {\r\n                return {\r\n                    texts: [...texts, { text: answer.text, type: \"answer\" }],\r\n                    title: finalAnswer.title,\r\n                    track: finalAnswer.track,\r\n                    selectedAnswer: answerId,\r\n                    showAnswers: false,\r\n                };\r\n            });\r\n            setTimeout(() => {\r\n                this.setState(({ texts }) => {\r\n                    return {\r\n                        title: finalAnswer.title,\r\n                        texts: [\r\n                            ...texts,\r\n                            { text: finalAnswer.text, type: \"question\" },\r\n                        ],\r\n                    };\r\n                });\r\n            }, 800);\r\n        }\r\n    };\r\n\r\n    onTrackEnded = () => {\r\n        this.setState({\r\n            showAnswers: true,\r\n        });\r\n    };\r\n\r\n    onBackClicked = () => {\r\n        if (this.state.questionsHistory.length === 0) {\r\n            this.props.onExitFromQuestion();\r\n            return;\r\n        }\r\n\r\n        this.setState(({ texts, questionsHistory }) => {\r\n            return {\r\n                question: questionsHistory[questionsHistory.length - 1],\r\n                answers: questionsHistory[questionsHistory.length - 1].answers,\r\n                title: questionsHistory[questionsHistory.length - 1].title,\r\n                track: questionsHistory[questionsHistory.length - 1].track,\r\n                selectedAnswer: null,\r\n                questionsHistory: questionsHistory.slice(\r\n                    0,\r\n                    questionsHistory.length - 1\r\n                ),\r\n                texts: texts.slice(0, texts.length - 2),\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            track,\r\n            showAnswers,\r\n            answers,\r\n            title,\r\n            selectedAnswer,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.Question}>\r\n                <SwitchTransition mode=\"out-in\">\r\n                    <CSSTransition\r\n                        classNames=\"track-title\"\r\n                        timeout={500}\r\n                        key={title}\r\n                    >\r\n                        <h3 className={classes.TrackTitle}>{title}</h3>\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n\r\n                <Track track={track} onTrackEnded={this.onTrackEnded} />\r\n                <CSSTransition\r\n                    classNames=\"answers-list\"\r\n                    timeout={800}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                    in={showAnswers}\r\n                >\r\n                    <div>\r\n                        <AnswersList\r\n                            answers={answers ? answers : null}\r\n                            onAnswerSelected={this.onAnswerSelected}\r\n                            onBackClicked={this.onBackClicked}\r\n                            selectedAnswer={selectedAnswer}\r\n                        />\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;\r\n","import Header from \"./header\";\r\nexport default Header;\r\n","import React from \"react\";\r\nimport classes from \"./header.module.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = ({ title, image, location }) => {\r\n  return (\r\n    <div className={classes.Header}>\r\n      <Link className={classes.BackLink} to={location.pathname}>\r\n        &larr; Choose another category\r\n      </Link>\r\n      <div className={classes.LogoWrapper}>\r\n        <img src={image} alt={title} />\r\n        <span>{title}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import Spinner from \"./spinner\";\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport classes from \"./spinner.module.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Loader}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport CompaniesList from \"../companies-list\";\r\nimport Question from \"../question\";\r\nimport Header from \"../header\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { getRandomNumber } from \"../../utils\";\r\nimport Spinner from \"../ui/spinner\";\r\nimport \"./animations.css\";\r\nimport classes from \"./app.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    companies: [],\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    return fetch(`/wp-json/wp/v2/companies`)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        const companies = {};\r\n        responseJson.forEach((company) => {\r\n          const comp = JSON.parse(company.adv_json);\r\n          companies[comp.id] = comp;\r\n        });\r\n        this.setState({\r\n          companies: companies,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  onExitFromQuestion = () => {\r\n    this.props.history.push(this.props.location.pathname);\r\n  };\r\n\r\n  render() {\r\n    const { companies, loading } = this.state;\r\n    const { sampleId } = qs.parse(this.props.location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n\r\n    let layoutKey = \"spinner\";\r\n    let layout = <Spinner />;\r\n    if (!loading) {\r\n      layout = <CompaniesList companies={companies} />;\r\n      layoutKey = \"companies\";\r\n    }\r\n    if (sampleId && !loading) {\r\n      const questionNumber = getRandomNumber(\r\n        companies[sampleId].questions.length\r\n      );\r\n      layoutKey = \"question\";\r\n      layout = (\r\n        <div>\r\n          <Header\r\n            image={companies[sampleId].image}\r\n            title={companies[sampleId].title}\r\n          />\r\n          <Question\r\n            question={companies[sampleId].questions[questionNumber]}\r\n            onExitFromQuestion={this.onExitFromQuestion}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Container}>\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition key={layoutKey} classNames=\"layout\" timeout={400}>\r\n            {layout}\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nconst target = document.getElementById(\"caseStudiesApp\");\r\n\r\nif (target) {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Router>\r\n                <Route path=\"/\" component={App} />\r\n            </Router>\r\n        </React.StrictMode>,\r\n        target\r\n    );\r\n}\r\n"],"sourceRoot":""}